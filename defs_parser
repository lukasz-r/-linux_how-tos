#!/usr/bin/awk -E

# a definitions file parser

# definitions in a definitions file can have two syntaxes:

# (1) def	text_first	[text_later]
# (2) def	text	URL (starting with "http://" or "https://")

# "def" can't contain dashes ("-")
# fields must be tab-separated

# definitions to be used in the Markdown file upon parsing the definitions file:
## "\def" prints the "text_first" (or the "text_later", if present) or the "text", in bold (such a non-linked definition is useful in chapter titles, the links to which in the table of contents would be broken if the linked definitions were used)
## case (1):
### "\def_anchor" creates an anchor with the "text_first"
### "\def_link" creates a link, with the "text_first" (or the "text_later", if present), to the anchor
## case (2):
### "\def_link" creates a link, with the "text", to an URL

BEGIN {
	FS = "\t"
}

function print_def(def, text) {
	print "\\define{" def "}{" text "}"
}

/^[[:alnum:]]/ {
	def = $1
	def_link = def "_link"
	text_first = "__" $2 "__"
	text_later = text_first
	if (NF > 2)
		if ($3 ~ /^https?:\/\//) {
			URL = $3
			print_def(def, text_first)
			print "\\define{" def_link "}{[" text_first "](" URL ")}"
			next
		} else
			text_later = "__" $3 "__"
	def_anchor = def "_anchor"
	print_def(def, text_later)
	print "\\define{" def_anchor "}{" text_first "<a name=\"" def "\"></a>}"
	print "\\define{" def_link "}{[" text_later "](#" def ")}"
}
